{"version":3,"sources":["components/Counter/Counter.jsx","components/Total/Total.jsx","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","counters","onIncrementClick","onDecrementClick","className","map","counter","value","onClick","handleDecrementClick","handleIncrementClick","id","defaultProps","Total","total","totals","reduce","totalValue","App","useState","counterList","setCounterList","index","findIndex","x","newCounterList","objIndex","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAgBA,SAASA,EAAQC,GAAQ,IACfC,EAAiDD,EAAjDC,SAAUC,EAAuCF,EAAvCE,iBAAkBC,EAAqBH,EAArBG,iBAcpC,OACE,qBAAKC,UAAU,mBAAf,SACE,6BACGH,EAASI,KAAI,SAACC,GAAD,OACZ,+BACE,+BAAOA,EAAQC,QACf,wBAAQH,UAAU,YAAYI,QAAS,kBAZjD,SAA8BF,GACxBJ,GACFC,EAAiBG,GAUkCG,CAAqBH,IAAlE,eACA,wBAAQF,UAAU,YAAYI,QAAS,kBAnBjD,SAA8BF,GACxBJ,GACFA,EAAiBI,GAiBkCI,CAAqBJ,IAAlE,iBAHOA,EAAQK,WAzB3BZ,EAAQa,aAAe,CACrBX,SAAU,GACVC,iBAAkB,KAClBC,iBAAkB,MAiCLJ,Q,MClCf,SAASc,EAAMb,GAAQ,IAEfc,EADad,EAAXe,OACaC,QAAO,SAACC,EAAYV,GAAb,OAAuBU,EAAaV,EAAMA,QAAO,GAC7E,OACE,qBAAKH,UAAU,QAAf,SACE,sBAAKA,UAAU,SAAf,mBAEE,+BAAOU,SAXfD,EAAMD,aAAe,CACjBG,OAAQ,IAgBGF,QCuCAK,MA3Df,WAAgB,IAAD,EACyBC,mBAAS,CAC7C,CAAER,GAAI,EAAGJ,MAAO,GAChB,CAAEI,GAAI,EAAGJ,MAAO,GAChB,CAAEI,GAAI,EAAGJ,MAAO,KAJL,mBACNa,EADM,KACOC,EADP,KA+Cb,OACE,sBAAKjB,UAAU,MAAf,UACE,cAAC,EAAD,CACEH,SAAUmB,EACVlB,iBAxCN,SAA8BI,GAC5B,IAAMgB,EAAQF,EAAYG,WAAU,SAACC,GAAD,OAAOA,EAAEb,KAAOL,EAAQK,MAC5D,KAAIW,EAAQ,GAAZ,CAEA,IAAMG,EAAc,YAAOL,GAErBM,EAAWD,EAAeH,GAEhCI,EAASnB,OAAS,EAElBkB,EAAeE,OAAOL,EAAO,GAC7BG,EAAeE,OAAOL,EAAO,EAAGI,GAChCL,EAAeI,KA6BXtB,iBArBN,SAA8BG,GAC5B,IAAMgB,EAAQF,EAAYG,WAAU,SAACC,GAAD,OAAOA,EAAEb,KAAOL,EAAQK,MAC5D,KAAIW,EAAQ,GAAZ,CAEA,IAAMG,EAAc,YAAOL,GAErBM,EAAWD,EAAeH,GAEhCI,EAASnB,OAAS,EACdmB,EAASnB,MAAQ,IAAGmB,EAASnB,MAAQ,GAEzCkB,EAAeE,OAAOL,EAAO,GAC7BG,EAAeE,OAAOL,EAAO,EAAGI,GAChCL,EAAeI,OAUb,cAAC,EAAD,CAAOV,OAAQK,QC/CNQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6aa44170.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport './style.scss';\r\n\r\nCounter.propTypes = {\r\n  counters: PropTypes.array,\r\n  onIncrementClick: PropTypes.func,\r\n  onDecrementClick: PropTypes.func,\r\n};\r\n\r\nCounter.defaultProps = {\r\n  counters: [],\r\n  onIncrementClick: null,\r\n  onDecrementClick: null,\r\n};\r\n\r\nfunction Counter(props) {\r\n  const { counters, onIncrementClick, onDecrementClick } = props;\r\n\r\n  function handleIncrementClick(counter) {\r\n    if (onIncrementClick) {\r\n      onIncrementClick(counter);\r\n    }\r\n  }\r\n\r\n  function handleDecrementClick(counter) {\r\n    if (onIncrementClick) {\r\n      onDecrementClick(counter);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"counter-controls\">\r\n      <ul>\r\n        {counters.map((counter) => (\r\n          <li key={counter.id}>\r\n            <span>{counter.value}</span>\r\n            <button className=\"increment\" onClick={() => handleDecrementClick(counter)}>-</button>\r\n            <button className=\"decrement\" onClick={() => handleIncrementClick(counter)}>+</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport './style.scss';\r\n\r\nTotal.propTypes = {\r\n  totals: PropTypes.array,\r\n};\r\n\r\nTotal.defaultProps = {\r\n    totals: [],\r\n};\r\n\r\nfunction Total(props) {\r\n  const { totals } = props;\r\n  const total = totals.reduce((totalValue, value) => totalValue + value.value, 0);\r\n  return (\r\n    <div className=\"total\">\r\n      <div className=\"result\">\r\n        Total:\r\n        <span>{total}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Total;\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Counter from \"./components/Counter/Counter\";\nimport Total from \"./components/Total/Total\";\n\nfunction App() {\n  const [counterList, setCounterList] = useState([\n    { id: 1, value: 0 },\n    { id: 2, value: 0 },\n    { id: 3, value: 0 },\n  ]);\n  /**\n   * Increment\n   * @param {*} counter\n   * @returns\n   */\n  function handleIncrementClick(counter) {\n    const index = counterList.findIndex((x) => x.id === counter.id);\n    if (index < 0) return;\n    // Clone new array\n    const newCounterList = [...counterList];\n    // determined index clicked\n    const objIndex = newCounterList[index];\n    // update new state\n    objIndex.value += 1;\n    // remove and replace new state\n    newCounterList.splice(index, 1);\n    newCounterList.splice(index, 0, objIndex);\n    setCounterList(newCounterList);\n  }\n\n  /**\n   * Decrement\n   * @param {*} counter\n   * @returns\n   */\n  function handleDecrementClick(counter) {\n    const index = counterList.findIndex((x) => x.id === counter.id);\n    if (index < 0) return;\n    // Clone new array\n    const newCounterList = [...counterList];\n    // determined index clicked\n    const objIndex = newCounterList[index];\n    // update new state\n    objIndex.value -= 1;\n    if (objIndex.value < 0) objIndex.value = 0;\n    // remove and replace new state\n    newCounterList.splice(index, 1);\n    newCounterList.splice(index, 0, objIndex);\n    setCounterList(newCounterList);\n  }\n\n  return (\n    <div className=\"App\">\n      <Counter\n        counters={counterList}\n        onIncrementClick={handleIncrementClick}\n        onDecrementClick={handleDecrementClick}\n      />\n      <Total totals={counterList} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}